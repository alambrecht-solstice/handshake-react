{"ast":null,"code":"var _jsxFileName = \"/Users/alexlambrecht/koko/handshake-test/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as handTrack from '../node_modules/handtrackjs';\n\nfunction App() {\n  // const img = document.getElementById('img');\n  // // Load the model.\n  // handTrack.load().then(model => {\n  //   // detect objects in the image.\n  //   console.log(\"model loaded\")\n  //   model.detect(img).then(predictions => {\n  //     console.log('Predictions: ', predictions); \n  //   });\n  // });\n  const video = this.refs.myvideo;\n  const canvas = this.refs.canvas;\n  const context = canvas.getContext(\"2d\");\n  let trackButton = this.refs.trackbutton;\n  let updateNote = this.refs.updatenote;\n  let isVideo = false;\n  let model = null;\n  const modelParams = {\n    flipHorizontal: true,\n    // flip e.g for video  \n    maxNumBoxes: 20,\n    // maximum number of boxes to detect\n    iouThreshold: 0.5,\n    // ioU threshold for non-max suppression\n    scoreThreshold: 0.6 // confidence threshold for predictions.\n\n  };\n  startVideo();\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"video\", {\n    class: \"videobox canvasbox\",\n    autoplay: \"autoplay\",\n    id: \"myvideo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"canvas\", {\n    id: \"canvas\",\n    class: \"border canvasbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload LOL.\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Learn React\")));\n}\n\nexport default App; //const video = document.getElementById(\"myvideo\");\n\nfunction startVideo() {\n  handTrack.startVideo(video).then(function (status) {\n    console.log(\"video started\", status);\n\n    if (status) {\n      updateNote.innerText = \"Video started. Now tracking\";\n      isVideo = true;\n      runDetection();\n    } else {\n      updateNote.innerText = \"Please enable video\";\n    }\n  });\n}\n\nfunction toggleVideo() {\n  if (!isVideo) {\n    updateNote.innerText = \"Starting video\";\n    startVideo();\n  } else {\n    updateNote.innerText = \"Stopping video\";\n    handTrack.stopVideo(video);\n    isVideo = false;\n    updateNote.innerText = \"Video stopped\";\n  }\n}\n\nfunction runDetection() {\n  model.detect(video).then(predictions => {\n    console.log(\"Predictions: \", predictions);\n    model.renderPredictions(predictions, canvas, context, video);\n\n    if (isVideo) {\n      requestAnimationFrame(runDetection);\n    }\n  });\n} // Load the model.\n\n\nhandTrack.load(modelParams).then(lmodel => {\n  // detect objects in the image.\n  model = lmodel;\n  updateNote.innerText = \"Loaded Model!\";\n  trackButton.disabled = false;\n});","map":{"version":3,"sources":["/Users/alexlambrecht/koko/handshake-test/src/App.js"],"names":["React","handTrack","App","video","refs","myvideo","canvas","context","getContext","trackButton","trackbutton","updateNote","updatenote","isVideo","model","modelParams","flipHorizontal","maxNumBoxes","iouThreshold","scoreThreshold","startVideo","logo","then","status","console","log","innerText","runDetection","toggleVideo","stopVideo","detect","predictions","renderPredictions","requestAnimationFrame","load","lmodel","disabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as handTrack from '../node_modules/handtrackjs';\n\nfunction App() {\n  // const img = document.getElementById('img');\n  \n  // // Load the model.\n  // handTrack.load().then(model => {\n  //   // detect objects in the image.\n  //   console.log(\"model loaded\")\n  //   model.detect(img).then(predictions => {\n  //     console.log('Predictions: ', predictions); \n  //   });\n  // });\n  const video = this.refs.myvideo;\n  const canvas = this.refs.canvas;\n  const context = canvas.getContext(\"2d\");\n  let trackButton = this.refs.trackbutton;\n  let updateNote = this.refs.updatenote;\n\n\n  let isVideo = false;\n  let model = null;\n\n  const modelParams = {\n      flipHorizontal: true,   // flip e.g for video  \n      maxNumBoxes: 20,        // maximum number of boxes to detect\n      iouThreshold: 0.5,      // ioU threshold for non-max suppression\n      scoreThreshold: 0.6,    // confidence threshold for predictions.\n  }\n\n  startVideo();\n\n\n  return (\n    <div className=\"App\">\n      <div>\n        <video class=\"videobox canvasbox\" autoplay=\"autoplay\" id=\"myvideo\"></video>\n        <canvas id=\"canvas\" class=\"border canvasbox\"></canvas>\n      </div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload LOL.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n\n\n    </div>\n\n    \n  );\n}\n\nexport default App;\n\n//const video = document.getElementById(\"myvideo\");\n\n\n\n\nfunction startVideo() {\n    handTrack.startVideo(video).then(function (status) {\n        console.log(\"video started\", status);\n        if (status) {\n            updateNote.innerText = \"Video started. Now tracking\"\n            isVideo = true\n            runDetection()\n        } else {\n            updateNote.innerText = \"Please enable video\"\n        }\n    });\n}\n\nfunction toggleVideo() {\n    if (!isVideo) {\n        updateNote.innerText = \"Starting video\"\n        startVideo();\n    } else {\n        updateNote.innerText = \"Stopping video\"\n        handTrack.stopVideo(video)\n        isVideo = false;\n        updateNote.innerText = \"Video stopped\"\n    }\n}\n\n\n\nfunction runDetection() {\n    model.detect(video).then(predictions => {\n        console.log(\"Predictions: \", predictions);\n        model.renderPredictions(predictions, canvas, context, video);\n        if (isVideo) {\n            requestAnimationFrame(runDetection);\n        }\n    });\n}\n\n// Load the model.\nhandTrack.load(modelParams).then(lmodel => {\n    // detect objects in the image.\n    model = lmodel\n    updateNote.innerText = \"Loaded Model!\"\n    trackButton.disabled = false\n});"]},"metadata":{},"sourceType":"module"}